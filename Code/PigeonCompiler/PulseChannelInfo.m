function r=PulseChannelInfo(varargin)
% This function holds all the information that connect abstract pulse
% to its hardware implementation
% each pulse is a structure in a cell array called info
% each stracture/Pulse MUST have the fields :
%'ChannelName' and 'ChannelType'. In addition any number of
% fields can be added.
% !! all fields should be supported by CodeGenerator !!.
% !! pulse of same type must have the same fields !!!
% Channel type | fields
%---------------------------------
%      'Dig'         'DigitalSwitch','OnIs'
%      'VCO'         'DigitalSwitch','OnIs','SetFreqAddress','Freq2Value','SetAmpAddress'
%      'PMT'         'Operation'
%      'Analog'     'AnalogSwitch'
%       'trig
persistent info;
if isempty(info)
    info={
        struct('ChannelName','DigOut0',... 
        'ChannelType','Dig','DigitalSwitch',0,'OnIs',1),... %1
        struct('ChannelName','DigOut1',... 
        'ChannelType','Dig','DigitalSwitch',1,'OnIs',1),... %2
        struct('ChannelName','DigOut2',...
        'ChannelType','Dig','DigitalSwitch',2,'OnIs',1),...%3
        struct('ChannelName','DigOut3',...
        'ChannelType','Dig','DigitalSwitch',3,'OnIs',1),...%4
        struct('ChannelName','DigOut4',...
        'ChannelType','Dig','DigitalSwitch',4,'OnIs',1),...%5
        struct('ChannelName','DigOut5',...
        'ChannelType','Dig','DigitalSwitch',5,'OnIs',1),...%6
        struct('ChannelName','DigOut6',...
        'ChannelType','Dig','DigitalSwitch',6,'OnIs',1),...%7
        struct('ChannelName','DigOut7',...
        'ChannelType','Dig','DigitalSwitch',7,'OnIs',1),...%8
        struct('ChannelName','DigOut8',...
        'ChannelType','Dig','DigitalSwitch',8,'OnIs',1),...%9
        struct('ChannelName','DigOut9',...
        'ChannelType','Dig','DigitalSwitch',9,'OnIs',1),...%10
         struct('ChannelName','DigOut10',...
        'ChannelType','Dig','DigitalSwitch',10,'OnIs',1),...%11
        struct('ChannelName','DigOut11',...
        'ChannelType','Dig','DigitalSwitch',11,'OnIs',1),...%12
        struct('ChannelName','DigOut12',...
        'ChannelType','Dig','DigitalSwitch',12,'OnIs',1),...%13
        struct('ChannelName','DigOut13',...
        'ChannelType','Dig','DigitalSwitch',13,'OnIs',1),...%14
        struct('ChannelName','DigOut14',...
        'ChannelType','Dig','DigitalSwitch',14,'OnIs',1),...%15
        struct('ChannelName','DigOut15',...
        'ChannelType','Dig','DigitalSwitch',15,'OnIs',1),...%16
        struct('ChannelName','DigOut16',...
        'ChannelType','Dig','DigitalSwitch',16,'OnIs',1),...%17
        struct('ChannelName','DigOut17',...
        'ChannelType','Dig','DigitalSwitch',17,'OnIs',1),...%18
        struct('ChannelName','DigOut18',...
        'ChannelType','Dig','DigitalSwitch',18,'OnIs',1),...%19
        struct('ChannelName','DigOut19',...
        'ChannelType','Dig','DigitalSwitch',19,'OnIs',1),...%20
        struct('ChannelName','AO0','ChannelType','Analog','AnalogSwitch',0),...%21
        struct('ChannelName','AO1','ChannelType','Analog','AnalogSwitch',1),...%22
        struct('ChannelName','AO2','ChannelType','Analog','AnalogSwitch',2),...%23
        struct('ChannelName','AO3','ChannelType','Analog','AnalogSwitch',3),...%24
        struct('ChannelName','AO4','ChannelType','Analog','AnalogSwitch',4),...%25
        struct('ChannelName','AO5','ChannelType','Analog','AnalogSwitch',5),...%26
        struct('ChannelName','AO6','ChannelType','Analog','AnalogSwitch',6),...%27
        struct('ChannelName','AO7','ChannelType','Analog','AnalogSwitch',7),...%28
        struct('ChannelName','forStart','ChannelType','forStart'),...%29
        struct('ChannelName','forEnd','ChannelType','forEnd'),...%30
        struct('ChannelName','DigOut0_2',...
        'ChannelType','Dig','DigitalSwitch',20,'OnIs',1),...%31
        struct('ChannelName','DigOut1_2',...
        'ChannelType','Dig','DigitalSwitch',21,'OnIs',1),...%32
        struct('ChannelName','DigOut2_2',...
        'ChannelType','Dig','DigitalSwitch',22,'OnIs',1),...%33
        struct('ChannelName','DigOut3_2',...
        'ChannelType','Dig','DigitalSwitch',23,'OnIs',1),...%34
        struct('ChannelName','DigOut4_2',...
        'ChannelType','Dig','DigitalSwitch',24,'OnIs',1),...%35
        struct('ChannelName','DigOut5_2',...
        'ChannelType','Dig','DigitalSwitch',25,'OnIs',1),...%36
        struct('ChannelName','DigOut6_2',...
        'ChannelType','Dig','DigitalSwitch',26,'OnIs',1),...%37
        struct('ChannelName','DigOut7_2',...
        'ChannelType','Dig','DigitalSwitch',27,'OnIs',1),...%38
        struct('ChannelName','DigOut8_2',...
        'ChannelType','Dig','DigitalSwitch',28,'OnIs',1),...%39
        struct('ChannelName','DigOut9_2',...
        'ChannelType','Dig','DigitalSwitch',29,'OnIs',1),...%40
        struct('ChannelName','DigOut10_2',...
        'ChannelType','Dig','DigitalSwitch',30,'OnIs',1),...%41
        struct('ChannelName','DigOut11_2',...
        'ChannelType','Dig','DigitalSwitch',31,'OnIs',1),...%42
        struct('ChannelName','DigOut12_2',...
        'ChannelType','Dig','DigitalSwitch',32,'OnIs',1),...%43
        struct('ChannelName','DigOut13_2',...
        'ChannelType','Dig','DigitalSwitch',33,'OnIs',1),...%44
        struct('ChannelName','DigOut14_2',...
        'ChannelType','Dig','DigitalSwitch',34,'OnIs',1),...%45
        struct('ChannelName','DigOut15_2',...
        'ChannelType','Dig','DigitalSwitch',35,'OnIs',1),...%46
        struct('ChannelName','DigOut16_2',...
        'ChannelType','Dig','DigitalSwitch',36,'OnIs',1),...%47
        struct('ChannelName','DigOut17_2',...
        'ChannelType','Dig','DigitalSwitch',37,'OnIs',1),...%48
        struct('ChannelName','DigOut18_2',...
        'ChannelType','Dig','DigitalSwitch',38,'OnIs',1),...%49
        struct('ChannelName','DigOut19_2',...
        'ChannelType','Dig','DigitalSwitch',39,'OnIs',1),...%50
        struct('ChannelName','DigOut20_2',...
        'ChannelType','Dig','DigitalSwitch',40,'OnIs',1),...%51
        struct('ChannelName','DigOut21_2',...
        'ChannelType','Dig','DigitalSwitch',41,'OnIs',1),...%52
        struct('ChannelName','DigOut22_2',...
        'ChannelType','Dig','DigitalSwitch',42,'OnIs',1),...%53
        struct('ChannelName','DigOut23_2',...
        'ChannelType','Dig','DigitalSwitch',43,'OnIs',1),...%54
        struct('ChannelName','UVLED',...
        'ChannelType','Dig','DigitalSwitch',44,'OnIs',1),...%55
        struct('ChannelName','DigOut25_2',...
        'ChannelType','Dig','DigitalSwitch',45,'OnIs',1),...%56
        struct('ChannelName','DigOut26_2',...
        'ChannelType','Dig','DigitalSwitch',46,'OnIs',1),...%57
        struct('ChannelName','DigOut27_2',...
        'ChannelType','Dig','DigitalSwitch',47,'OnIs',1),...%58
        struct('ChannelName','DigOut28_2',...
        'ChannelType','Dig','DigitalSwitch',48,'OnIs',1),...%59
        struct('ChannelName','DigOut29_2',...
        'ChannelType','Dig','DigitalSwitch',49,'OnIs',1),...%60
        struct('ChannelName','DigOut30_2',...
        'ChannelType','Dig','DigitalSwitch',50,'OnIs',1),...%61
        struct('ChannelName','DigOut31_2',...
        'ChannelType','Dig','DigitalSwitch',51,'OnIs',1),...%62
        struct('ChannelName','DigOut32_2',...
        'ChannelType','Dig','DigitalSwitch',52,'OnIs',1)%63
        
%         ,struct('ChannelName','CoolingSwitch',...
%         'ChannelType','Dig','DigitalSwitch',0,'OnIs',1),...
%         struct('ChannelName','RepumpSwitch',...
%         'ChannelType','Dig','DigitalSwitch',0,'OnIs',1)...
        };
end

%--------------------------------------------------------
if size(varargin,2)>0
%     if the varargin structure is such that the first param is numeric., the effect is
%     1st param is the channel number,
%     2nd param is the type of info we want to query e.g "ChannelName",
%     "ChannelType" etc. this is then the return value of the function
    if isnumeric(varargin{1})
        r=info{varargin{1}}.(varargin{2});
    else
%         if the first input param is not numeric, it is assumed we only have one input param 
% which is a channel name. this has to match the name of one of the channles in the info structure 
% the function then retuns the channel number.
        numofchannel=size(info,2);
        num=1;
        while num<=numofchannel
            if strcmp(info{num}.ChannelName,varargin{1})
                break;
            else
                num=num+1;
            end
        end
        if (num > numofchannel)
            num=0;
            error('Channel name is not in ChannelInfo')
        end
        r=num;
    end
else
    r=info;
end
end
